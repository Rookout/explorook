version: 2
references:
  filter_master: &filter_master
    filters:
      branches:
        only: master

jobs:
  publish:
    macos:
      xcode: "10.1.0"
    steps:
      - checkout
      - restore_cache:
          key: homebrew-cache-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Build and Publish
          command: |
            # homebrew started throwing error when installing wine and cleanup helped
            brew cleanup
            # wine is required to sign windows executables
            (brew install wine || brew install wine)
            # install gcloud sdk
            curl -fsSL https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip --output /Users/distiller/google-cloud-sdk.zip
            unzip /Users/distiller/google-cloud-sdk.zip
            bash google-cloud-sdk/install.sh --usage-reporting=false --path-update=true --bash-completion=true --rc-path=/Users/distiller/.bashrc
            source ~/.bashrc
            # Save gcloud credentials service account and authenticate
            echo $GOOGLE_SERVICE_ACCOUNT_KEY_BASE64 | base64 --decode > gcloud_service_account.json
            export GOOGLE_APPLICATION_CREDENTIALS=gcloud_service_account.json
            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
            # download custom jsign to sign PE
            curl -fsSL https://get.rookout.com/jsign-rookout.jar --output jsign.jar
            # install yarn
            npm install -g yarn@1.17.3
            # install electron main window dependencies
            yarn
            # build code (mostly compile typescript)
            yarn run build
            # install dependencies
            # CircleCI sets CI=true which makes react return an error when there are warnings in the code
            CI=false yarn run --prefix src/webapp build
            # save windows certificate locally (WIN_CERT) is base64 of our certificate
            echo $WIN_EV_CERT_BASE64 | base64 --decode > rookout.crt
            export WINDOWS_EV_CERTIFICATE_PATH=rookout.crt
            # package code for every distribution (mac, win, linux) and publish as github release
            yarn run mac-publish
            # publish in google storage bucket (additionally to electronbuild-publisher)
            bash upload_release_to_gs.sh
      - save_cache:
          key: homebrew-cache-{{ checksum ".circleci/config.yml" }}
          paths:
            - /usr/local/Homebrew
  version_validation:
    macos:
      xcode: "9.2.0"
    steps:
      - checkout
      - run:
          name: Validate version has no release yet
          command: sh ./validate_version.sh
  publish_release_notes:
    docker:
      - image: node:8
    steps:
      - checkout
      - run:
          name: Generate release notes
          command: |
            export EXPLOROOK_VERSION=$(node -e 'console.log(require("./package").version)') && curl -X POST https://github-enforcer.rookout.com/release -H "Content-Type: application/json" -H "X-Enforcer-Signature: $ENFORCER_SECRET" -d '{"repository":{"full_name":"Rookout/explorook"},"data":{"inner_version":"v'$EXPLOROOK_VERSION'","version_to_publish":"'$EXPLOROOK_VERSION'","component":"explorook","released_by":"CircleCI"}}'
workflows:
  version: 2
  publish-pipeline:
    jobs:
      - version_validation:
          requires:
          <<: *filter_master
      - publish:
          requires:
            - version_validation
      - publish_release_notes:
          requires:
            - publish
